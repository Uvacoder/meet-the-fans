let reposH={"*":gitUser},totals={nbStars:0,nbForks:0},licensesH={};const repos=gitUser.repos;repos.forEach(e=>{totals.nbStars+=e.nbStars,totals.nbForks+=e.nbForks,reposH[e.name]=e;const o=licensesH[e.licenseName];o?o.repos.push(e.name):licensesH[e.licenseName]={id:e.licenseName,repos:[e.name]}}),gitUser.nbStars=totals.nbStars,gitUser.nbForks=totals.nbForks,gitUser.name="*",fans[gitUser.login]&&delete fans[gitUser.login];const size=e=>5+2*(e.starred.length+e.forked.length),userColorGroup=e=>e.forked.length?e.starred.length?"both":"fork":e.follower?"follower":"star",getData=()=>{let t=[],r=[];for(var o in repos.forEach((e,o)=>{e.group=o+2,t.push({id:e.name,oType:"repo",radius:Math.min(10+e.nbStars/10,100),group:e.group,isRepo:!0}),r.push({source:"*",target:e.name,value:4})}),repos.push({name:"*",description:"Evoluteur"}),t.push({id:"*",radius:20,group:0,isRepo:!0}),fans){const i=fans[o];t.push({id:o,radius:size(i),oType:"user",group:userColorGroup(i)}),i.starred.forEach(e=>r.push({source:o,target:e,value:1})),i.forked.forEach(e=>{i.starred.includes(e)||r.push({source:o,target:e,value:1})})}return{nodes:t,links:r}},height=config.height||2e3,width=config.width||2500,userColors=config.userColors,colorFaded=config.colorFaded||"#eeeeee",circleBorder=config.circleBorder||"white",lineColor=config.lineColor||"white",scaleProject=d3.scaleOrdinal(d3.schemeCategory10),color=e=>e.isRepo?scaleProject(e.group):userColors[e.group],linksDistance=config.linksDistance||50,linksCharge=config.linksDistance||-30,drag=o=>{return d3.drag().on("start",e=>{e.active||o.alphaTarget(.3).restart(),e.subject.fx=e.subject.x,e.subject.fy=e.subject.y}).on("drag",e=>{e.subject.fx=e.x,e.subject.fy=e.y}).on("end",e=>{e.active||o.alphaTarget(0),e.subject.fx=null,e.subject.fy=null})};let selectedRepo=null;const graph=e=>{var o=e.links,e=e.nodes,r=d3.select("body").append("div").attr("class","tooltip").style("opacity",0);const t=d3.forceSimulation(e).force("link",d3.forceLink(o).distance(50).id(e=>e.id)).force("charge",d3.forceManyBody().strength(-30)).force("center",d3.forceCenter(width/2,height/2)).force("collision",d3.forceCollide().radius(e=>e.radius)),i=d3.create("svg").attr("viewBox",[0,0,width,height]).on("click",hideDetails),s=i.append("g");i.call(d3.zoom().extent([[0,0],[width,height]]).scaleExtent([1,8]).on("zoom",({transform:e})=>{s.attr("transform",e)}));const l=s.attr("stroke",lineColor).selectAll("line").data(o).join("line").attr("stroke-width",1),a=s.attr("stroke","#fff").attr("stroke-width",1.5).selectAll("circle").data(e).join("circle").attr("id",e=>e.id).attr("r",e=>e.radius).attr("stroke",circleBorder).attr("fill",color).attr("class",e=>e.oType).call(drag(t)).on("click",showDetails).on("mouseover",(e,o)=>{r.transition().duration(200).delay(400).style("opacity",.9);const t=r.html(o.isRepo?repoItem(reposH[o.id]):userTooltip(o));e.pageX+100>window.innerWidth?t.style("left",window.innerWidth-100+"px"):t.style("right",null).style("left",e.pageX+20+"px"),t.style("bottom",null).style("top",e.pageY+10+"px")}).on("mouseout",(e,o)=>{r.transition().duration(200).style("opacity",0)});return t.on("tick",()=>{l.attr("x1",e=>e.source.x).attr("y1",e=>e.source.y).attr("x2",e=>e.target.x).attr("y2",e=>e.target.y),a.attr("cx",e=>e.x).attr("cy",e=>e.y)}),i.node()},hideDetails=e=>{d3.selectAll("circle").transition().duration(600).style("fill",color).style("stroke",circleBorder),d3.selectAll("line").transition().duration(600).style("stroke",lineColor),selectedRepo=null},showDetails=(e,t)=>{if(e.stopPropagation(),"rgb(238, 238, 238)"===e.target.style.fill&&"repo"!==t.oType)return null;if(!e.detail.skipModal){const i=document.getElementById("details");i.innerHTML=(t.isRepo&&"*"!==t.id?infoRepo:infoUser)(t.id),i.className=(t.x>width/2?"left":"right")+(t.isRepo?" w220":"")}let o,r=e=>t.id!==e.source.id&&t.id!==e.target.id;"repo"===t.oType?(selectedRepo=t.id,o=e=>{if("repo"===e.oType)return t.id!==e.id||""==e.id;{const o=fans[e.id];return!!o&&!(o.starred.includes(t.id)||o.forked.includes(t.id))}},d3.selectAll("circle").transition().duration(600).style("fill",e=>o(e)?colorFaded:color(e)).style("stroke",e=>o(e)?"#0288d1":circleBorder),d3.selectAll("line").transition().duration(600).style("stroke",e=>r(e)?colorFaded:lineColor).filter(e=>!r(e))):"user"===t.oType?(o=e=>{const o=fans[t.id];return!(o.starred.includes(e.id)||o.forked.includes(e.id))},r=e=>t.id===e.source.id,selectedRepo&&(d3.selectAll("circle.repo").transition().duration(600).style("fill",e=>o(e)?colorFaded:color(e)),r=e=>t.id===e.source.id,d3.selectAll("line").transition().duration(600).filter(r).style("stroke",lineColor))):hideDetails()},selectProject=e=>{var o=new CustomEvent("click",{detail:{skipModal:!0}});const t=document.getElementById(e);t&&t.dispatchEvent(o)},renderGraph=()=>{document.getElementById("graph").appendChild(graph(getData())),document.getElementById("details").onclick=e=>e.stopPropagation(),document.onclick=()=>document.getElementById("details").className=""},repoArr=e=>e.sort((e,o)=>e.localeCompare(o)).map(e=>"*"===e?gitUser:reposH[e]),textField=(e,o)=>o?`<div class="field"><label>${e}:</label> ${o}</div>`:"",urlField=(e,o)=>e[o]?`
  <div class="field ellipsis">
    <div class="icon link"></div> <a href="${e[o]}" target="${e.name}" rel="noopener">${e[o]}</a>
  </div>
`:"",icon=e=>'<div class="icon '+e+'"></div>',condIcon=(e,o)=>o?icon(e)+`<span>${o}</span>`:"",infoRepo=o=>{const e=repos.find(e=>e.name===o);var t="";return t+=`<h1><a href="${`https://github.com/${gitUser.login}/`+e.name}" target="${e.name}">
      <div class="repo-circle" style="background-color:${color({isRepo:!0,name:e.name||r.id,group:e.group})}"></div>
      ${e.name}
    </a></h1>`,t+=urlField(e,"homepageUrl")+repoItemPop(e)+(e.repos?repoList(repos):"")+(e.description?`<div class="field">${e.description}</div>`:"")+textField("Updated",e.updatedAt)+textField("Created",e.createdAt),t+=e.licenseInfo?`<div class="field multi">${icon("license")}<a href="${e.licenseInfo.url}" target="${e.licenseInfo.key}" rel="noopener">${e.licenseInfo.name}</a></div>`:"",t+=e.languages&&e.languages.length?e.languages.map(e=>`<span><div style="background-color:${e.color}" class="ln-dot"></div>${e.name}</span>`).join(""):"",t+=htmlTopics(e.topics)},avatarPix=(e,o)=>`<div class="${o}"><img src="${e}"></div>`,userTooltip=e=>avatarPix(fans[e.id].avatarUrl,"avatar-small")+e.id+textField("Updated",e.updatedAt),infoUser=e=>{var o="*"===e?gitUser:fans[e];let t="";var r=o.login===gitUser.login,e="https://github.com/"+o.login;return t+=o.avatarUrl?'<div class="h190"><img src="'+o.avatarUrl+'"></div>':"",t+=`<h1><a href="${e}" target="${o.login}">${o.login}</a></h1>`,t+=o.fullName?`<div class="fullName">${o.fullName}</div>`:"",t+=urlField(o,"websiteUrl")+urlField(o,"webURL"),t+=o.location?`<div class="field"><div class="icon location"></div> <span>${o.location}</span></div>`:"",t+=o.bio?`<div class="field">${o.bio}</div>`:"",t+='<div class="field multi">',t+=o.nbFollowers?`${icon("followers")}<a href="https://github.com/${o.login}?tab=followers" target="${"follow_"+o.name}" rel="noopener">${o.nbFollowers}</a>`:"",t+=r?condIcon("star",o.nbStars)+condIcon("fork",o.nbForks):o.nbRepos?`${icon("repos")}<a href="https://github.com/${o.login}?tab=repositories" target="${o.name}" rel="noopener">${o.nbRepos}</a>`:"",t+="</div>",r?t+=repoList(gitUser.repos,!0):(o.starred&&o.starred.length&&(t+='<div class="field"><label>Starred: '+o.starred.length+"</label>"+repoList(repoArr(o.starred),!1,!0)+"</div>"),o.forked&&o.forked.length&&(t+='<div class="field"><label>Forked: '+o.forked.length+"</label> "+repoList(repoArr(o.forked),!1,!0)+"</div>")),t},repoList=(e,o,t)=>'<div class="reposList">'+(t?"":'<span class="repoIco">'+icon("repos")+" "+e.length+"</span>")+e.map(e=>repoItem(e,o)).join("")+"</div>",repoItem=(e,o)=>{var t=e.login||"*"===e.name;if(t&&o)return"";var r=t?e.login:e.name,o=t?e.login:gitUser.login+"/"+e.name;return`
      <div>
        <a class="${t?"gituser":""}" href="javascript:selectProject('${e.name}')">
          <div class="repo-circle" style="background-color:${color({isRepo:!0,group:t?0:e.group})}"></div>
        </a>
        <a class="${t?"gituser":""}" href="https://github.com/${o}" target="${r}" rel="noopener">
          ${r}
        </a>
        ${t?`<div class="field multi">
          ${condIcon("followers",e.nbFollowers)}
          ${condIcon("star",e.nbStars)}
          ${condIcon("fork",e.nbForks)}
        </div>`:repoItemPop(e)}
      </div>
    `};let topicList=[];const maxTopics=config.maxTopics||3,htmlTopic=e=>`<div><a href="https://github.com/topics/${e}" target="t_${e}">${e}</a></div>`,htmlTopics=e=>'<div id="my_topics" class="field topics">'+(topicList=e).slice(0,maxTopics).map(htmlTopic).join("")+(e.length>maxTopics?'<div class="morelink" onclick="moreTopics(event)">+ '+(e.length-maxTopics)+" more...</div>":""),moreTopics=e=>{e.stopPropagation(),document.getElementById("my_topics").innerHTML=topicList.map(htmlTopic).join("")},repoItemPop=e=>{var o=`https://github.com/${gitUser.login}/${e.name}/`,t=` target="${e.name}" rel="noopener"`;return`
<div class="field multi">
  ${e.nbStars?`${icon("star")}<a href="${o}stargazers" ${t}>${e.nbStars}</a>`:""}
  ${e.nbForks?`${icon("fork")}<a href="${o}network/members" ${t}>${e.nbForks}</a>`:""}
  ${e.version?`${icon("tag")}<a href="${o}releases/tag/${e.version}" class="bold" ${t}>${e.version}</a>`:""}
</div>
`};