/*
 meet-the-fans v1.0.0
 https://github.com/evoluteur/meet-the-fans
 (c) 2020 Olivier Giulieri 
*/
let reposH={"*":gitUser},totals={nbStars:0,nbForks:0},licensesH={};const repos=gitUser.repos;repos.forEach(e=>{totals.nbStars+=e.nbStars,totals.nbForks+=e.nbForks,reposH[e.name]=e;const s=licensesH[e.licenseName];s?s.repos.push(e.name):licensesH[e.licenseName]={id:e.licenseName,repos:[e.name]}}),gitUser.nbStars=totals.nbStars,gitUser.nbForks=totals.nbForks,gitUser.name="*",fans[gitUser.login]&&delete fans[gitUser.login];const size=e=>5+2*(e.starred.length+e.forked.length);function userColorGroup(e){return e.forked.length?e.starred.length?"both":"fork":e.follower?"follower":"star"}function getData(){let e=[],s=[];for(var r in repos.forEach((r,o)=>{r.group=o+2,e.push({id:r.name,oType:"repo",radius:10+r.nbStars/10,group:r.group,isRepo:!0}),s.push({source:"*",target:r.name,value:4})}),repos.push({name:"*",description:"Evoluteur"}),e.push({id:"*",radius:20,group:0,isRepo:!0}),fans){const o=fans[r];e.push({id:r,radius:size(o),oType:"user",group:userColorGroup(o)}),o.starred.forEach(e=>s.push({source:r,target:e,value:1})),o.forked.forEach(e=>{o.starred.includes(e)||s.push({source:r,target:e,value:1})})}return{nodes:e,links:s}}
const height=config.height||2e3,width=config.width||2500,userColors=config.userColors,colorFaded=config.colorFaded||"#eeeeee",circleBorder=config.circleBorder||"white",lineColor=config.lineColor||"white",scaleProject=d3.scaleOrdinal(d3.schemeCategory10),color=e=>e.isRepo?scaleProject(e.group):userColors[e.group],linksDistance=config.linksDistance||50,linksCharge=config.linksDistance||-30,drag=e=>d3.drag().on("start",(function(t){t.active||e.alphaTarget(.3).restart(),t.subject.fx=t.subject.x,t.subject.fy=t.subject.y})).on("drag",(function(e){e.subject.fx=e.x,e.subject.fy=e.y})).on("end",(function(t){t.active||e.alphaTarget(0),t.subject.fx=null,t.subject.fy=null}));let selectedRepo=null;function graph(e){const t=e.links,o=e.nodes;var i=d3.select("body").append("div").attr("class","tooltip").style("opacity",0);const r=d3.forceSimulation(o).force("link",d3.forceLink(t).distance(50).id(e=>e.id)).force("charge",d3.forceManyBody().strength(-30)).force("center",d3.forceCenter(width/2,height/2)).force("collision",d3.forceCollide().radius(e=>e.radius)),l=d3.create("svg").attr("viewBox",[0,0,width,height]).on("click",hideDetails),n=l.append("g");l.call(d3.zoom().extent([[0,0],[width,height]]).scaleExtent([1,8]).on("zoom",(function({transform:e}){n.attr("transform",e)})));const s=n.attr("stroke",lineColor).selectAll("line").data(t).join("line").attr("stroke-width",1),c=n.attr("stroke","#fff").attr("stroke-width",1.5).selectAll("circle").data(o).join("circle").attr("id",e=>e.id).attr("r",e=>e.radius).attr("stroke",circleBorder).attr("fill",color).attr("class",e=>e.oType).call(drag(r)).on("click",showDetails).on("mouseover",(e,t)=>{i.transition().duration(200).delay(400).style("opacity",.9);const o=i.html(t.isRepo?repoItem(reposH[t.id]):userTooltip(t));e.pageX+100>window.innerWidth?o.style("left",window.innerWidth-100+"px"):o.style("right",null).style("left",e.pageX+20+"px"),o.style("bottom",null).style("top",e.pageY+10+"px")}).on("mouseout",(e,t)=>{i.transition().duration(200).style("opacity",0)});return r.on("tick",()=>{s.attr("x1",e=>e.source.x).attr("y1",e=>e.source.y).attr("x2",e=>e.target.x).attr("y2",e=>e.target.y),c.attr("cx",e=>e.x).attr("cy",e=>e.y)}),l.node()}function hideDetails(e){d3.selectAll("circle").transition().duration(600).style("fill",color).style("stroke",circleBorder),d3.selectAll("line").transition().duration(600).style("stroke",lineColor),selectedRepo=null}function showDetails(e,t){if(e.stopPropagation(),"rgb(238, 238, 238)"===e.target.style.fill&&"repo"!==t.oType)return null;if(!e.detail.skipModal){const e=document.getElementById("details");e.innerHTML=t.isRepo&&"*"!==t.id?infoRepo(t.id):infoUser(t.id),e.className=(t.x>width/2?"left":"right")+(t.isRepo?" w220":"")}let o,i=e=>t.id!==e.source.id&&t.id!==e.target.id;"repo"===t.oType?(selectedRepo=t.id,o=e=>{if("repo"===e.oType)return t.id!==e.id||""==e.id;{const o=fans[e.id];return!!o&&!(o.starred.includes(t.id)||o.forked.includes(t.id))}},d3.selectAll("circle").transition().duration(600).style("fill",e=>o(e)?colorFaded:color(e)).style("stroke",e=>o(e)?"#0288d1":circleBorder),d3.selectAll("line").transition().duration(600).style("stroke",e=>i(e)?colorFaded:lineColor).filter(e=>!i(e))):"user"===t.oType?(o=e=>{const o=fans[t.id];return!(o.starred.includes(e.id)||o.forked.includes(e.id))},i=e=>t.id===e.source.id,selectedRepo&&(d3.selectAll("circle.repo").transition().duration(600).style("fill",e=>o(e)?colorFaded:color(e)),i=e=>t.id===e.source.id,d3.selectAll("line").transition().duration(600).filter(i).style("stroke",lineColor))):hideDetails()}function selectProject(e){var t=new CustomEvent("click",{detail:{skipModal:!0}}),o=document.getElementById(e);o&&o.dispatchEvent(t)}const renderGraph=()=>{document.getElementById("graph").appendChild(graph(getData())),document.getElementById("details").onclick=e=>e.stopPropagation(),document.onclick=()=>document.getElementById("details").className=""};
const repoArr=e=>e.sort((e,i)=>e.localeCompare(i)).map(e=>"*"===e?gitUser:reposH[e]),textField=(e,i)=>i?`<div class="field"><label>${e}:</label> ${i}</div>`:"",urlField=(e,i)=>e[i]?`\n  <div class="field ellipsis">\n    <div class="icon link"></div> <a href="${e[i]}" target="${e.name}" rel="noopener">${e[i]}</a>\n  </div>\n`:"",iconTextField=(e,i)=>`<div class="icon ${e}"></div><span>${i}</span>`,icon=e=>'<div class="icon '+e+'"></div>';function infoRepo(e){const i=repos.find(i=>i.name===e);let o="";return o+=`<h1><a href="${"https://github.com/"+gitUser.login+"/"+i.name}" target="${i.name}">\n      <div class="repo-circle" style="background-color:${color({isRepo:!0,name:i.name||r.id,group:i.group})}"></div>\n      ${i.name}\n    </a></h1>`,o+=urlField(i,"homepageUrl"),o+=repoItemPop(i),o+=i.repos?repoList(repos):"",o+=i.description?`<div class="field">${i.description}</div>`:"",o+=textField("Updated",i.updatedAt),o+=textField("Created",i.createdAt),o+=i.licenseInfo?`<div class="field multi">${icon("license")}<a href="${i.licenseInfo.url}" target="${i.licenseInfo.key}" rel="noopener">${i.licenseInfo.name}</a></div>`:"",o+=i.languages&&i.languages.length?i.languages.map(e=>`<span><div style="background-color:${e.color}" class="ln-dot"></div>${e.name}</span>`).join(""):"",o+=htmlTopics(i.topics),o}const avatarPix=(e,i)=>`<div class="${i}"><img src="${e}"></div>`,userTooltip=e=>{return i=fans[e.id].avatarUrl,`<div class="${"avatar-small"}"><img src="${i}"></div>`+e.id+textField("Updated",e.updatedAt);var i},infoUser=e=>{const i="*"===e?gitUser:fans[e];let o="";const s=i.login===gitUser.login;let n="https://github.com/"+i.login;return o+=i.avatarUrl?'<div class="h190"><img src="'+i.avatarUrl+'"></div>':"",o+=`<h1><a href="${n}" target="${i.login}">${i.login}</a></h1>`,o+=i.fullName?`<div class="fullName">${i.fullName}</div>`:"",o+=urlField(i,"websiteUrl"),o+=urlField(i,"webURL"),o+=i.location?`<div class="field"><div class="icon location"></div><span> ${i.location}</span></div>`:"",o+=i.bio?`<div class="field">${i.bio}</div>`:"",o+='<div class="field multi">',o+=i.nbFollowers?`${icon("followers")}<a href="https://github.com/${i.login}?tab=followers" target="${"follow_"+i.name}" rel="noopener">${i.nbFollowers}</a>`:"",s?(o+=i.nbStars?iconTextField("star",i.nbStars):"",o+=i.nbForks?iconTextField("fork",i.nbForks):""):o+=i.nbRepos?`${icon("repos")}<a href="https://github.com/${i.login}?tab=repositories" target="${i.name}" rel="noopener">${i.nbRepos}</a>`:"",o+="</div>",s?o+=repoList(gitUser.repos,!0):(i.starred&&i.starred.length&&(o+='<div class="field"><label>Starred: '+i.starred.length+"</label>"+repoList(repoArr(i.starred),!1,!0)+"</div>"),i.forked&&i.forked.length&&(o+='<div class="field"><label>Forked: '+i.forked.length+"</label> "+repoList(repoArr(i.forked),!1,!0)+"</div>")),o},repoList=(e,i,o)=>'<div class="reposList">'+(o?"":'<span class="repoIco">'+icon("repos")+" "+e.length+"</span>")+e.map(e=>repoItem(e,i)).join("")+"</div>",repoItem=(e,i)=>{const o=e.login||"*"===e.name;if(o&&i)return"";const s=o?e.login:e.name,n=o?e.login:gitUser.login+"/"+e.name;return`\n      <div>\n        <a class="${o?"gituser":""}" href="javascript:selectProject('${e.name}')">\n          <div class="repo-circle" style="background-color:${color({isRepo:!0,group:o?0:e.group})}"></div>\n        </a>\n        <a class="${o?"gituser":""}" href="https://github.com/${n}" target="${s}" rel="noopener">\n          ${s}\n        </a>\n        ${o?`<div class="field multi">\n          ${e.nbFollowers?icon("followers")+e.nbFollowers:""}\n          ${e.nbStars?icon("star")+e.nbStars:""}\n          ${e.nbForks?icon("fork")+e.nbForks:""}\n        </div>`:repoItemPop(e)}\n      </div>\n    `};let topicList=[];const maxTopics=config.maxTopics||3,htmlTopic=e=>`<div><a href="https://github.com/topics/${e}" target="t_${e}">${e}</a></div>`,htmlTopics=e=>(topicList=e,'<div id="my_topics" class="field topics">'+e.slice(0,maxTopics).map(htmlTopic).join("")+(e.length>maxTopics?'<div class="morelink" onclick="moreTopics(event)">+ '+(e.length-maxTopics)+" more...</div>":""));function moreTopics(e){e.stopPropagation(),document.getElementById("my_topics").innerHTML=topicList.map(htmlTopic).join("")}const repoItemPop=e=>{const i=`https://github.com/${gitUser.login}/${e.name}/`,o=` target="${e.name}" rel="noopener"`;return`\n<div class="field multi">\n  ${e.nbStars?`${icon("star")}<a href="${i}stargazers" ${o}>${e.nbStars}</a>`:""}\n  ${e.nbForks?`${icon("fork")}<a href="${i}network/members" ${o}>${e.nbForks}</a>`:""}\n  ${e.version?`${icon("tag")}<a href="${i}releases/tag/${e.version}" class="bold" ${o}>${e.version}</a>`:""}\n</div>\n`};